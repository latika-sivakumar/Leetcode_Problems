# This function takes a list of strings 'words' and a character 'x', and returns a list of indices of the words that contain the character 'x'.
# Returns a list of indices where the character 'x' is found in the corresponding word.

# Time Complexity:
# O(n * m) where n is the number of words and m is the average length of the words.
# This is because for each word, the `in` operation takes O(m) time in the worst case.

# Space Complexity:
# O(k) where k is the number of matching indices (at most equal to the number of words), plus space for the result list.

class Solution:
    def findWordsContaining(self, words: List[str], x: str) -> List[int]:
        l=[]
        for i in range(len(words)):
            if x in words[i]:
                l.append(i)
        return l
