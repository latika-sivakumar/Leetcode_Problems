# This function finds the **maximum difference** `nums[j] - nums[i]` such that `j > i` and `nums[j] > nums[i]`.
# - It maintains a running minimum (`mini`) while iterating through the list. For each element, if it's greater than the current minimum, it computes the difference and updates the maximum difference `ans`.
# - If no such pair exists (i.e., array is non-increasing), it returns -1.

# Time Complexity:
# O(n), where n is the number of elements in `nums`.
# - Single pass through the array.

# Space Complexity:
# O(1), uses only constant extra space (`ans` and `mini`).

class Solution:
    def maximumDifference(self, nums):
        ans=-1
        mini=nums[0]
        for i in range(1,len(nums)):
            mini=min(mini,nums[i])
            if nums[i]>mini:
                ans=max(ans,nums[i]-mini)
        return ans
