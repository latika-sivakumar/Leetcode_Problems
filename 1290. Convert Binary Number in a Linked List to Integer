# This function converts a binary number represented as a linked list into its decimal (base-10) value.
# - Each node in the list contains a binary digit (0 or 1).
# - The most significant bit is at the head of the list.
# - It performs a left shift and bitwise OR operation to build the number iteratively.

# Time Complexity:
# O(n), where n is the number of nodes in the linked list.

# Space Complexity:
# O(1), since only a constant amount of extra space is used.

class Solution:
    def getDecimalValue(self, head: Optional[ListNode]) -> int:
        num = 0
        while head:
            num = (num << 1) | head.val
            head = head.next
        return num
