# Computes the nth term of the Count and Say sequence.
# Starts from the base case for n = 1 and builds each term recursively.
# Uses run-length encoding to describe the previous term.
# Iterates through the previous term to count consecutive repeating digits.
# Constructs the current term by appending the count followed by the digit.
# Returns the final constructed string as the result for the given n.

class Solution:
    def countAndSay(self, n: int) -> str:
        if n==1:
            return "1"
        pre=self.countAndSay(n-1)
        r,i="",0
        while i<len(pre):
            c=1
            while i+1<len(pre) and pre[i]==pre[i+1]:
                i+=1
                c+=1
            r+=str(c)+pre[i]
            i+=1
        return r
